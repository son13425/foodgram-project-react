openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/subscriptions/:
    get:
      operationId: subscriptionsUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/follow/:
    get:
      operationId: followUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: deleteFollowUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/tags/:
    get:
      operationId: listTags
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/tags/{id}/:
    get:
      operationId: retrieveTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0422\u0435\u0433."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/ingredients/:
    get:
      operationId: listIngredients
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ingredients'
          description: ''
      tags:
      - api
    post:
      operationId: createIngredients
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredients'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredients'
          description: ''
      tags:
      - api
  /api/ingredients/{id}/:
    get:
      operationId: retrieveIngredients
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0418\u043D\u0433\u0440\
          \u0438\u0434\u0438\u0435\u043D\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredients'
          description: ''
      tags:
      - api
    put:
      operationId: updateIngredients
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0418\u043D\u0433\u0440\
          \u0438\u0434\u0438\u0435\u043D\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredients'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredients'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIngredients
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0418\u043D\u0433\u0440\
          \u0438\u0434\u0438\u0435\u043D\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredients'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredients'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIngredients
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0418\u043D\u0433\u0440\
          \u0438\u0434\u0438\u0435\u043D\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/recipes/:
    get:
      operationId: listRecipes
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    post:
      operationId: createRecipe
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
  /api/recipes/download_shopping_cart/:
    get:
      operationId: downloadShoppingCartRecipe
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
  /api/recipes/{id}/:
    get:
      operationId: retrieveRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    put:
      operationId: updateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/recipes/{id}/favorite/:
    get:
      operationId: favoriteRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    delete:
      operationId: deleteFavoriteRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/recipes/{id}/shopping_cart/:
    get:
      operationId: shoppingCartRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    delete:
      operationId: deleteShoppingCartRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0420\u0435\u0446\u0435\
          \u043F\u0442."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          description: "\u0410\u0434\u0440\u0435\u0441 \u044D\u043B\u0435\u043A\u0442\
            \u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
        first_name:
          type: string
          description: "\u0418\u043C\u044F"
          maxLength: 150
        last_name:
          type: string
          description: "\u0424\u0430\u043C\u0438\u043B\u0438\u044F"
          maxLength: 150
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439\
            \ \u044E\u0437\u0435\u0440\u043D\u0435\u0439\u043C"
      required:
      - email
      - first_name
      - last_name
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435"
          maxLength: 200
        color:
          type: string
        slug:
          type: string
          description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439\
            \ \u0441\u043B\u0430\u0433"
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - color
      - slug
    Ingredients:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435"
          maxLength: 200
        measurement_unit:
          type: string
          description: "\u0415\u0434\u0438\u043D\u0438\u0446\u0430 \u0438\u0437\u043C\
            \u0435\u0440\u0435\u043D\u0438\u044F"
          maxLength: 200
      required:
      - name
      - measurement_unit
    Recipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435"
          maxLength: 200
        text:
          type: string
          description: "\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435"
        author:
          type: string
          readOnly: true
        image:
          type: string
          format: binary
        ingredients:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                readOnly: true
              name:
                type: string
                readOnly: true
              measurement_unit:
                type: string
                readOnly: true
              amount:
                type: integer
                minimum: 1
                description: "\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\
                  \u043E \u0438\u043D\u0433\u0440\u0438\u0434\u0438\u0435\u043D\u0442\
                  \u0430 \u0432 \u0440\u0435\u0446\u0435\u043F\u0442\u0435"
            required:
            - amount
          readOnly: true
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                description: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435"
                maxLength: 200
              color:
                type: string
              slug:
                type: string
                description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\
                  \u0439 \u0441\u043B\u0430\u0433"
                maxLength: 200
                pattern: ^[-a-zA-Z0-9_]+$
            required:
            - name
            - color
            - slug
          readOnly: true
        cooking_time:
          type: integer
          minimum: 1
          description: "\u0412\u0440\u0435\u043C\u044F \u043F\u0440\u0438\u0433\u043E\
            \u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F (\u0432 \u043C\u0438\u043D\
            \u0443\u0442\u0430\u0445)"
        is_favorited:
          type: string
          readOnly: true
        is_in_shopping_cart:
          type: string
          readOnly: true
      required:
      - name
      - text
      - image
      - cooking_time
    UserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439\
            \ \u044E\u0437\u0435\u0440\u043D\u0435\u0439\u043C"
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          description: "\u0410\u0434\u0440\u0435\u0441 \u044D\u043B\u0435\u043A\u0442\
            \u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          description: "\u0418\u043C\u044F"
          maxLength: 150
        last_name:
          type: string
          description: "\u0424\u0430\u043C\u0438\u043B\u0438\u044F"
          maxLength: 150
      required:
      - username
      - email
      - password
      - first_name
      - last_name
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439\
            \ \u044E\u0437\u0435\u0440\u043D\u0435\u0439\u043C"
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439\
            \ \u044E\u0437\u0435\u0440\u043D\u0435\u0439\u043C"
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
